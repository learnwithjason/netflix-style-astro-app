---
import type { GetStaticPaths } from 'astro';
import { format } from 'date-fns';
import Layout from '../../../../layouts/default.astro';
import VideoPlayer from '../../../../components/video-player.astro';
import EpisodePreview from '../../../../components/episode-preview.astro';
import { getCollections, getPeople } from '../../../../../db/interface';

export const getStaticPaths = (async () => {
	const collections = await getCollections();

	return collections.flatMap((collection) => {
		return collection.resources.map((episode) => {
			if (!collection.parent || !collection.parent.fields) {
				return { params: {} };
			}

			// get 5 related episodes, if available
			const currPos = episode.position;
			const maxPos = collection.resources.length - 1;
			const endPos = Math.min(currPos + 2, maxPos);
			const startPos = Math.max(endPos - 5, 0);

			const relatedEpisodes = collection.resources
				.filter((e) => e.id !== episode.id)
				.slice(startPos, endPos);

			return {
				params: {
					seriesSlug: collection.parent.fields.slug,
					collectionSlug: collection.fields.slug,
					episodeSlug: episode.fields.slug,
				},
				props: {
					collection: collection.fields,
					series: collection.parent.fields,
					episode: { id: episode.id, ...episode.fields },
					relatedEpisodes,
					episodeNumber: episode.position + 1,
				},
			};
		});
	});
}) satisfies GetStaticPaths;

const { series, collection, episode, episodeNumber, relatedEpisodes } =
	Astro.props;

console.log({ series, collection, episode, episodeNumber, relatedEpisodes });

const people = await getPeople(episode.id);
---

<Layout>
	<VideoPlayer episode={episode} />
	<div class="wrapper">
		<div class="episode-details">
			<h1>
				{episode.title}
			</h1>
			<div class="episode-meta">
				<span class="episode-number">
					{collection.slug} E{episodeNumber}
				</span>
				<span class="episode-date">
					{format(episode.publish_date, 'MMM d, yyyy')}
				</span>
			</div>
			<p>{episode.description}</p>
		</div>

		<section>
			<h2>People in this episode</h2>

			<pre>{JSON.stringify(people, null, 2)}</pre>

			<div class="people">
				<div class="person">
					<a href="#profile"
						><img
							src="https://images.unsplash.com/photo-1611432579699-484f7990b127?q=80&auto=format&fit=crop&w=200&h=200&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
							alt="Sandra Guest"
						/></a
					>
					<h4><a href="#profile">Srushtika Neelakantam</a></h4>
				</div>

				<div class="person">
					<a href="#profile"
						><img
							src="https://images.unsplash.com/photo-1611432579699-484f7990b127?q=80&auto=format&fit=crop&w=200&h=200&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
							alt="Sandra Guest"
						/></a
					>
					<h4><a href="#profile">Person Name</a></h4>
				</div>
			</div>
		</section>

		{
			relatedEpisodes.length > 0 ? (
				<section>
					<h2>More episodes in this series</h2>

					<div class="more-episodes">
						{relatedEpisodes.map((related) => (
							<EpisodePreview
								class="compact"
								episode={related.fields}
								episodeNumber={`${collection.slug} E${related.position + 1}`}
								episodeUrl={`/series/${series.slug}/${collection.slug}/${related.fields.slug}`}
							/>
						))}
					</div>
				</section>
			) : null
		}

		<section>
			<h2>Episode credits</h2>
		</section>
	</div>
</Layout>

<style>
	.wrapper {
		padding: 2rem max(calc((100cqw - 1024px) / 2), 5cqw) 4rem;
	}

	.episode-details {
		& h1 {
			font-family: mallory-medium;
			font-size: 0.875rem;
			line-height: 1.1;
			margin-block: 0.25rem;
		}

		& p {
			font-size: 0.75rem;
			line-height: 1.25;
		}
	}

	.episode-meta {
		display: flex;
		font-family: mallory-light;
		font-size: 0.75rem;
		gap: 0.5rem;
		margin-block: 0.25rem;
	}

	.episode-number {
		font-family: mallory-medium;
		text-transform: uppercase;
	}

	section {
		margin-block-start: 3rem;

		& h2 {
			font-family: mallory-book;
			font-size: 0.875rem;
			line-height: 1.1;
			margin-block: 0.25rem;
		}
	}

	.people {
		display: flex;
		gap: 1rem;
		margin-block-start: 1rem;
	}

	.person {
		inline-size: 120px;

		& img {
			block-size: auto;
			border-radius: 50%;
			display: block;
			inline-size: 90px;
			margin-inline: auto;
		}

		& h4 {
			font-family: mallory-book;
			font-size: 0.675rem;
			font-weight: normal;
			line-height: 1.1;
			margin-block-start: 0.25rem;
			text-align: center;

			& a {
				color: inherit;
				text-decoration: none;

				&:is(:hover, :focus) {
					text-decoration: underline;
				}
			}
		}
	}

	.more-episodes {
		display: flex;
		gap: 2rem;
		margin-block-start: 1rem;
	}
</style>
