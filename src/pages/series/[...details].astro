---
import type { GetStaticPaths } from 'astro';
import { db, Series, Collection, eq, Episode } from 'astro:db';
import Layout from '../../layouts/default.astro';

export const getStaticPaths = (async () => {
	const seriesData = await db
		.select()
		.from(Series)
		.innerJoin(Collection, eq(Series.id, Collection.series))
		.innerJoin(Episode, eq(Collection.id, Episode.collection));

	const series = seriesData.reduce<any>((acc, row) => {
		const s = row.Series;
		const c = row.Collection;
		const e = row.Episode;

		console.log({ s, c, e, acc });

		if (!acc[s.id]) {
			acc[s.id] = {
				...s,
				collections: [{ ...c, episodes: [] }],
			};
		}

		if (
			acc[s.id] &&
			acc[s.id].collections.some((coll: any) => coll.id === c.id)
		) {
			acc[s.id].collections
				.find((coll: any) => coll.id === c.id)
				.episodes.push(e);
		}

		return acc;
	}, {});

	const pages = Object.values(series).flatMap((s: any) => {
		return s.collections.map((c: any) => {
			return {
				params: {
					details: `${s.slug}/${c.slug}`,
				},
				props: {
					series: {
						title: s.title,
						description: s.description,
						banner_image: s.banner_image,
					},
					collection: {
						year: c.year,
						name: c.name,
						slug: c.slug,
					},
					episodes: c.episodes,
				},
			};
		});
	});

	return pages;
}) satisfies GetStaticPaths;

const { series, collection, episodes } = Astro.props;
---

<Layout>
	<header>
		<h1>{series.title}</h1>
		<img src={series.banner_image} alt={series.title} />
	</header>

	<section>
		{
			episodes.map((ep) => {
				return (
					<div class="episode">
						<img src={ep.thumbnail} alt={ep.title} />
						<h2>{ep.title}</h2>
					</div>
				);
			})
		}
	</section>
</Layout>

<style>
	header {
		align-items: end;
		block-size: 40dvh;
		display: flex;
		inline-size: 100vw;
		padding: 4rem;
		position: relative;

		& h1 {
			color: white;
			position: relative;
			z-index: 10;
		}

		& img {
			block-size: 100%;
			inline-size: 100%;
			display: block;
			inset: 0;
			object-fit: cover;
			position: absolute;
			z-index: 1;
		}
	}

	.episode {
		display: block;
		inline-size: 170px;

		& img {
			inline-size: 100%;
			display: block;
		}
	}
</style>
